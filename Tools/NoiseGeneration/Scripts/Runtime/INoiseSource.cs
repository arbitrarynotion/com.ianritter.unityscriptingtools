using UnityEngine.Events;

namespace Packages.com.ianritter.unityscriptingtools.Tools.NoiseGeneration.Scripts.Runtime
{
    public interface INoiseSource
    {
        /// <summary>
        ///     Provide the values required for the noise module to be able to generate the noise map.
        /// </summary>
        /// <param name="newNoiseMapWidth">The width of the noise map.</param>
        /// <param name="newNoiseMapHeight">The height of the noise map.</param>
        /// <param name="settingsSOChangedCallBack">This method will be called when the noise module's noiseSettingsSO gets changed.</param>
        /// <param name="noiseSettingsChangedCallBack">This method will be called when the noise settings on the noiseSettingsSO get changed.</param>
        void Initialize( int newNoiseMapWidth, int newNoiseMapHeight, UnityAction settingsSOChangedCallBack, UnityAction noiseSettingsChangedCallBack );
        
        /// <summary>
        ///     Update the noise module. Use when the size of the map has changed.
        /// </summary>
        /// <param name="noiseMapWidth">The width of the noise map.</param>
        /// <param name="noiseMapHeight">The height of the noise map.</param>
        void UpdateNoiseMapSize( int noiseMapWidth, int noiseMapHeight );
        
        /// <summary>
        ///     Get the noise value at this x and y coordinate.
        /// </summary>
        /// <param name="x"></param>
        /// <param name="y"></param>
        /// <returns></returns>
        float GetNoiseAtIndex( int x, int y );
        
        /// <summary>
        ///     Get the 2D noise map generated by the noise module.
        /// </summary>
        /// <returns></returns>
        float[,] Get2DNoiseMap();
        
        // /// <summary>
        // ///     Get the NoiseSettingsSO used by the noise module.
        // /// </summary>
        // /// <returns></returns>
        // NoiseSettingsSO GetNoiseSettingsSO();

        /// <summary>
        ///     Subscribes the callback method to the onNoiseMapSizeUpdated event.
        /// </summary>
        /// <param name="callback"></param>
        void SubscribeToNoiseMapChanges( UnityAction<int, int> callback );
    }
}